// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: query.sql

package _db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO
  payment_handler.tblm_users (user_id, "role", "name")
VALUES
  ($1, $2, $3) RETURNING user_id,
  "name",
  "role"
`

type CreateUserParams struct {
	UserID string
	Role   string
	Name   string
}

type CreateUserRow struct {
	UserID string
	Name   string
	Role   string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.UserID, arg.Role, arg.Name)
	var i CreateUserRow
	err := row.Scan(&i.UserID, &i.Name, &i.Role)
	return i, err
}
